{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryana\\\\csc307\\\\CSC307-Receipt-App\\\\packages\\\\frontend\\\\src\\\\PopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport \"./CSS Files/PopUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupButton = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const popupData = \"Hello, this is data for the modal!\";\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    Modal.setAppElement('#root');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"calculate\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Popup Modal\",\n      style: {\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        content: {\n          maxWidth: '400px',\n          margin: 'auto',\n          padding: '20px',\n          backgroundColor: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [popupData, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"closeButton\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(PopupButton, \"3tdItJMdYo8BCtZ2aawBhgRLyyM=\");\n_c = PopupButton;\nexport default PopupButton;\nvar _c;\n$RefreshReg$(_c, \"PopupButton\");","map":{"version":3,"names":["React","useEffect","useState","Modal","jsxDEV","_jsxDEV","PopupButton","_s","isModalOpen","setIsModalOpen","popupData","openModal","closeModal","setAppElement","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","style","overlay","backgroundColor","content","maxWidth","margin","padding","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/ryana/csc307/CSC307-Receipt-App/packages/frontend/src/PopUp.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Modal from 'react-modal';\r\nimport \"./CSS Files/PopUp.css\";\r\n\r\n\r\nconst PopupButton = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const popupData = \"Hello, this is data for the modal!\";\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        Modal.setAppElement('#root');\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <button onClick={openModal} className='calculate'>\r\n                Submit\r\n            </button>\r\n\r\n            <Modal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={closeModal}\r\n                contentLabel=\"Popup Modal\"\r\n                style={{\r\n                    overlay: {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    },\r\n                    content: {\r\n                        maxWidth: '400px',\r\n                        margin: 'auto',\r\n                        padding: '20px',\r\n                        backgroundColor: '#fff',\r\n                        borderRadius: '5px',\r\n                        boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n                    },\r\n                }}\r\n            >\r\n                <div>\r\n                    {popupData}\r\n                    <button onClick={closeModal} className='closeButton'>\r\n                        X\r\n                    </button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopupButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMQ,SAAS,GAAG,oCAAoC;EAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBF,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrBH,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZE,KAAK,CAACU,aAAa,CAAC,OAAO,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BV,OAAA;MAAQW,OAAO,EAAEL,SAAU;MAACG,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAElD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETf,OAAA,CAACF,KAAK;MACFkB,MAAM,EAAEb,WAAY;MACpBc,cAAc,EAAEV,UAAW;MAC3BW,YAAY,EAAC,aAAa;MAC1BC,KAAK,EAAE;QACHC,OAAO,EAAE;UACLC,eAAe,EAAE;QACrB,CAAC;QACDC,OAAO,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE,MAAM;UACfJ,eAAe,EAAE,MAAM;UACvBK,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACf;MACJ,CAAE;MAAAjB,QAAA,eAEFV,OAAA;QAAAU,QAAA,GACKL,SAAS,eACVL,OAAA;UAAQW,OAAO,EAAEJ,UAAW;UAACE,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAErD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACb,EAAA,CAjDID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}